<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: chef | Mischa Taylor's Coding Blog]]></title>
  <link href="http://misheska.com/blog/categories/chef/atom.xml" rel="self"/>
  <link href="http://misheska.com/"/>
  <updated>2013-03-27T08:08:41-07:00</updated>
  <id>http://misheska.com/</id>
  <author>
    <name><![CDATA[Mischa Taylor]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Getting started writing Chef cookbooks the Berkshelf Way]]></title>
    <link href="http://misheska.com/blog/2013/03/24/getting-started-writing-chef-cookbooks-the-berkshelf-way/"/>
    <updated>2013-03-24T09:27:00-07:00</updated>
    <id>http://misheska.com/blog/2013/03/24/getting-started-writing-chef-cookbooks-the-berkshelf-way</id>
    <content type="html"><![CDATA[<p>Jamie Winsor hasn't yet updated his <a href="http://vialstudios.com/guide-authoring-cookbooks.html">guide to authoring cookbooks the Berkshelf way</a>
to match <a href="https://github.com/RiotGames/berkshelf/issues/416">recent changes related to Vagrant 1.1</a> and <a href="http://www.opscode.com/blog/2013/03/11/chef-11-server-up-and-running/">Chef 11</a>
This post is an attempt to update these instructions, walking through his
and Sean O'Meara's example app - <a href="https://github.com/reset/myface-cookbook">MyFace</a>.
For more information on <a href="http://berkshelf.com/">Berkshelf</a>, check out his recent
<a href="https://my.adobeconnect.com/_a295153/p59b87of2dp/?launcher=false&amp;fcsContent=true&amp;pbMode=normal">talk</a>
and <a href="http://www.slideshare.net/resetexistence/the-berkshelf-way">slides</a>
from the March 14, 2013 Bay Area Chef meetup.</p>

<h1>Getting Started</h1>

<ul>
<li><p>Install Ruby 1.9.x via <a href="http://misheska.com/blog/2013/02/24/using-rbenv-to-manage-multiple-versions-of-ruby/">rvm</a> or <a href="http://misheska.com/blog/2013/02/24/using-rbenv-to-manage-multiple-versions-of-ruby/">rbenv</a></p></li>
<li><p><a href="http://virtualbox.org">Install VirtualBox 4.2.x (or higher)</a></p></li>
<li><p><a href="http://vagrantup.com">Install Vagrant 1.1.x</a></p></li>
<li><p>Install the Berkshelf Vagrant Plugin (1.0.3 or higher)</p></li>
</ul>


<p><code>
$ vagrant plugin install berkshelf-vagrant
Installing the 'berkshelf-vagrant' plugin. This can take a few minutes...
Installed the plugin 'berkshelf-vagrant (1.0.6)'!
</code></p>

<ul>
<li>Install Berkshelf</li>
</ul>


<p><code>
$ gem install berkshelf
</code></p>

<h1>Create the MyFace Application Cookbook</h1>

<p>Key to the Berkshelf way is the use of the Application Cookbook Pattern.  An
application cookbook contains the list of recipes needed to build your
application or service.  As an example, this blog post will walk you through
the creation of an example service - MyFace - the next killer social web app.</p>

<p>First create a new cookbook for the MyFace application using the
<code>berks cookbook</code> command:</p>

<pre><code>$ berks cookbook myface
      create  myface/files/default
      create  myface/templates/default
      create  myface/attributes
      create  myface/definitions
      create  myface/libraries
      create  myface/providers
      create  myface/recipes
      create  myface/resources
      create  myface/recipes/default.rb
      create  myface/metadata.rb
      create  myface/LICENSE
      create  myface/README.md
      create  myface/Berksfile
      create  myface/chefignore
      create  myface/.gitignore
         run  git init from "./myface"
      create  myface/Gemfile
      create  myface/Vagrantfile
Using myface (0.1.0) at path: '/Users/misheska/myface'
</code></pre>

<p>Run <code>bundle install</code> in the newly created cookbook directory to install the
necessary Gem dependencies:</p>

<pre><code>$ cd myface
$ bundle install
</code></pre>

<h1>Prepare a virtual machine for testing</h1>

<p>It's a good idea to develop your cookbook incrementally, testing
in short iterations.  Berkshelf integrates with Vagrant to deploy
your cookbook changes to a virtual machine for testing.</p>

<p>Edit the Vagrantfile generated by the <code>berks cookbook</code> command to use
a VirtualBox template that has Chef 11 installed.  (By default Berkshelf points
at an image with Chef 10).  Your Vagrantfile should look like this:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>myface/Vagrantfile  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="s2">&quot;2&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">hostname</span> <span class="o">=</span> <span class="s2">&quot;myface-berkshelf&quot;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="s2">&quot;opcode_centos-6.3_chef-11.2.0&quot;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box_url</span> <span class="o">=</span> <span class="s2">&quot;https://opscode-vm.s3.amazonaws.com/vagrant/opscode_centos-6.3_chef-11.2.0.box&quot;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:private_network</span><span class="p">,</span> <span class="ss">ip</span><span class="p">:</span> <span class="s2">&quot;33.33.33.10&quot;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">ssh</span><span class="o">.</span><span class="n">max_tries</span> <span class="o">=</span> <span class="mi">40</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">ssh</span><span class="o">.</span><span class="n">timeout</span> <span class="o">=</span> <span class="mi">120</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  config.vm.provision :chef_solo do |chef|&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">chef</span><span class="o">.</span><span class="n">json</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">:mysql</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="p">{</span>
</span><span class='line'>    <span class="ss">:server_root_password</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="s1">&#39;rootpass&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:server_debian_password</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="s1">&#39;debpass&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:server_repl_password</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="s1">&#39;replpass&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">chef</span><span class="o">.</span><span class="n">run_list</span> <span class="o">=</span> <span class="o">[</span>
</span><span class='line'>  <span class="s2">&quot;recipe[myface::defult]&quot;</span>
</span><span class='line'><span class="o">]</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Run <code>vagrant up</code> to start up the virtual machine and to test the stub MyFace
cookbook you just created:</p>

<pre><code>$ vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
[default] Box 'opscode_centos-6.3_chef-11.2.0' was not found. Fetching box from specified URL for
the provider 'virtualbox'. Note that if the URL does not have
a box for this provider, you should interrupt Vagrant now and add
the box yourself. Otherwise Vagrant will attempt to download the
full box prior to discovering this error.
Downloading with Vagrant::Downloaders::HTTP...
Downloading box: https://opscode-vm.s3.amazonaws.com/vagrant/opscode_centos-6.3_chef-11.2.0.box
Extracting box...
Cleaning up downloaded box...
Successfully added box 'opscode_centos-6.3_chef-11.2.0' with provider 'virtualbox'!
[default] Importing base box 'opscode_centos-6.3_chef-11.2.0'...
[default] Matching MAC address for NAT networking...
[default] Setting the name of the VM...
[default] Clearing any previously set forwarded ports...
[Berkshelf] Updating Vagrant's berkshelf: '/Users/misheska/.berkshelf/vagrant/berkshelf-20130324-17246-9dysyo'
[Berkshelf] Using myface (0.1.0) at path: '/Users/misheska/git/myface'
[default] Creating shared folders metadata...
[default] Clearing any previously set network interfaces...
[default] Preparing network interfaces based on configuration...
[default] Forwarding ports...
[default] -- 22 =&gt; 2222 (adapter 1)
[default] Booting VM...
[default] Waiting for VM to boot. This can take a few minutes.
[default] VM booted and ready for use!
[default] Setting hostname...
[default] Configuring and enabling network interfaces...
[default] Mounting shared folders...
[default] -- /vagrant
[default] -- /tmp/vagrant-chef-1/chef-solo-1/cookbooks
[default] Running provisioner: VagrantPlugins::Chef::Provisioner::ChefSolo...
Generating chef JSON and uploading...
Running chef-solo...
[2013-03-24T21:21:56+00:00] INFO: *** Chef 11.2.0 ***
[2013-03-24T21:21:57+00:00] INFO: Setting the run_list to ["recipe[myface::default]"] from JSON
[2013-03-24T21:21:57+00:00] INFO: Run List is [recipe[myface::default]]
[2013-03-24T21:21:57+00:00] INFO: Run List expands to [myface::default]
[2013-03-24T21:21:57+00:00] INFO: Starting Chef Run for myface-berkshelf
[2013-03-24T21:21:57+00:00] INFO: Running start handlers
[2013-03-24T21:21:57+00:00] INFO: Start handlers complete.
[2013-03-24T21:21:57+00:00] INFO: Chef Run complete in 0.0256688 seconds
[2013-03-24T21:21:57+00:00] INFO: Running report handlers
[2013-03-24T21:21:57+00:00] INFO: Report handlers complete
</code></pre>

<p>If all goes well, you should see <code>Chef Run complete</code> with no errors.</p>

<p>If you would ever like to delete your test virtual machine and start over,
you can destroy your test virtual machine with the <code>vagrant destroy</code> command:</p>

<pre><code>$ vagrant destroy
Are you sure you want to destroy the 'default' VM? [y/N] y
[default] Forcing shutdown of VM...
[default] Destroying VM and associated drives...
[Berkshelf] Cleaning Vagrant's berkshelf
</code></pre>

<p>Run <code>vagrant up</code> to recreate the test virtual machine.</p>

<p><strong>NOTE:</strong> If you just ran <code>vagrant destroy</code> make sure you run <code>vagrant up</code>
before proceeding to the next section.</p>

<h1>Iteration #1: Create an application user</h1>

<p>For our first short iteration, let's create a <code>myface</code> user under which
we'll run our application.  One best practice is to avoid running
applications as root and create a user/group under which the application runs
instead who has just enough rights that the app needs.</p>

<p>Edit <code>myface/recipes/default.rb</code> defining a new <a href="http://docs.opscode.com/resource_group.html">Group Resource</a>
and <a href="http://docs.opscode.com/resource_user.html">User Resource</a> for myface,
so it looks like the following:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>myface/recipes/default.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Cookbook</span> <span class="ss">Name</span><span class="p">::</span> <span class="n">myface</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Recipe:: default&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="c1">#&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Copyright</span> <span class="p">(</span><span class="n">C</span><span class="p">)</span> <span class="mi">2013</span> <span class="no">YOUR_NAME</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;#&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">All</span> <span class="n">rights</span> <span class="n">reserved</span> <span class="o">-</span> <span class="no">Do</span> <span class="no">Not</span> <span class="no">Redistribute</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;#&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">group</span> <span class="s2">&quot;myface&quot;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;user &quot;myface&quot; do</span>
</span><span class='line'><span class="sr">  group &quot;myface&quot;</span>
</span><span class='line'><span class="sr">  system true</span>
</span><span class='line'><span class="sr">  shell &quot;/</span><span class="n">bin</span><span class="o">/</span><span class="n">bash</span><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Save <code>receipes/default.rb</code> and re-run <code>vagrant provision</code> to create the
myface user on your test virtual machine:</p>

<pre><code>$ vagrant provision
[Berkshelf] Updating Vagrant's berkshelf: '/Users/misheska/.berkshelf/vagrant/berkshelf-20130324-19145-nf292v'
[Berkshelf] Using myface (0.1.0) at path: '/Users/misheska/git/myface'
[default] Running provisioner: VagrantPlugins::Chef::Provisioner::ChefSolo...
Generating chef JSON and uploading...
Running chef-solo...
[2013-03-25T11:40:10+00:00] INFO: *** Chef 11.2.0 ***
[2013-03-25T11:40:10+00:00] INFO: Setting the run_list to ["recipe[myface::default]"] from JSON
[2013-03-25T11:40:10+00:00] INFO: Run List is [recipe[myface::default]]
[2013-03-25T11:40:10+00:00] INFO: Run List expands to [myface::default]
[2013-03-25T11:40:10+00:00] INFO: Starting Chef Run for myface-berkshelf
[2013-03-25T11:40:10+00:00] INFO: Running start handlers
[2013-03-25T11:40:10+00:00] INFO: Start handlers complete.
[2013-03-25T11:40:10+00:00] INFO: Processing group[myface] action create (myface::default line 10)
[2013-03-25T11:40:10+00:00] INFO: group[myface] created
[2013-03-25T11:40:10+00:00] INFO: Processing user[myface] action create (myface::default line 12)
[2013-03-25T11:40:10+00:00] INFO: user[myface] created
[2013-03-25T11:40:10+00:00] INFO: Chef Run complete in 0.085739737 seconds
[2013-03-25T11:40:10+00:00] INFO: Running report handlers
[2013-03-25T11:40:10+00:00] INFO: Report handlers complete
</code></pre>

<p>Again, you should expect to see the Chef run complete with no errors.  Notice
that it also creates <code>group[myface]</code> and <code>user[myface]</code>.</p>

<p>Verify that Chef actually created the myface user on our test virtual
machine by running the following:</p>

<pre><code>$ vagrant ssh -c "getent passwd myface"
myface:x:497:1001::/home/myface:/bin/bash
</code></pre>

<p>We use <code>vagrant ssh -c</code> to run a command on our test virtual machine.  The
<code>getent</code> command can be used to query all user databases.  In this
case we're looking for <code>myface</code>, and it exists!</p>

<p>Because we are using well-defined resources that are completely
<a href="http://en.wikipedia.org/wiki/Idempotence">idempotent</a>, you should notice
that if you run <code>vagrant provision</code> again, the Chef run executes more quickly
and it does not try to re-create the user/group it already created.</p>

<pre><code>$ vagrant provision
[Berkshelf] Updating Vagrant's berkshelf: '/Users/misheska/.berkshelf/vagrant/berkshelf-20130324-19145-nf292v'
[Berkshelf] Using myface (0.1.0) at path: '/Users/misheska/git/myface'
[default] Running provisioner: VagrantPlugins::Chef::Provisioner::ChefSolo...
Generating chef JSON and uploading...
Running chef-solo...
[2013-03-25T11:50:03+00:00] INFO: *** Chef 11.2.0 ***
[2013-03-25T11:50:04+00:00] INFO: Setting the run_list to ["recipe[myface::default]"] from JSON
[2013-03-25T11:50:04+00:00] INFO: Run List is [recipe[myface::default]]
[2013-03-25T11:50:04+00:00] INFO: Run List expands to [myface::default]
[2013-03-25T11:50:04+00:00] INFO: Starting Chef Run for myface-berkshelf
[2013-03-25T11:50:04+00:00] INFO: Running start handlers
[2013-03-25T11:50:04+00:00] INFO: Start handlers complete.
[2013-03-25T11:50:04+00:00] INFO: Processing group[myface] action create (myface::default line 10)
[2013-03-25T11:50:04+00:00] INFO: Processing user[myface] action create (myface::default line 12)
[2013-03-25T11:50:04+00:00] INFO: Chef Run complete in 0.028070063 seconds
[2013-03-25T11:50:04+00:00] INFO: Running report handlers
[2013-03-25T11:50:04+00:00] INFO: Report handlers complete
</code></pre>

<h1>Iteration #2 - Refactor the user name and group name into attributes</h1>

<p>What if at some point you wanted to change the name of the <code>myface</code> user/group
you just created to something else?  At the moment, you would need to edit
<code>myface/recipes/default.rb</code> in three places.</p>

<p>Let's create a new file called <code>myface/attributes/default.rb</code> which
initializes Chef <a href="http://docs.opscode.com/essentials_cookbook_attribute_files.html">attributes</a>
defining the user name and group name under which our application will run so
that you <a href="http://en.wikipedia.org/wiki/Don't_repeat_yourself">don't repeat yoursef</a>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>myface/attributes/default.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">default</span><span class="o">[</span><span class="ss">:myface</span><span class="o">][</span><span class="ss">:user</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;myface&quot;</span>
</span><span class='line'><span class="n">default</span><span class="o">[</span><span class="ss">:myface</span><span class="o">][</span><span class="ss">:group</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;myface&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>In Chef, attributes are a hash of a hash used to override the default settings
on a node.  The first hash is the cookbook name - in our
case we've named our cookbook <code>:myface</code>. The second hash is the name of
our attribute - in this case, we're defining two new attributes: <code>:user</code> and
<code>:group</code>.</p>

<p><code>default</code> implies the use of the <a href="http://docs.opscode.com/chef/essentials_node_object.html">node object</a>
<code>node.default</code> and is a Chef attribute file shorthand.  The following are
equivalent definitions to the ones above:</p>

<pre><code>node.default[:myface][:user] = "myface"
noce.default[:myface][:user] = "myface"
</code></pre>

<p>Also note the use of symbols instead of strings.  It is <a href="http://www.robertsosinski.com/2009/01/11/the-difference-between-ruby-symbols-and-strings/">strongly recommended
that you use symbols instead of strings</a>
for hash indexes.</p>

<p>Now that you've created your attribute definitions, edit
<code>myface/recipes/default.rb</code> and replace all references to the "myface" user name
with <code>node[:myface][:user]</code> and all references to the "myface" group with
<code>node[:myface][:group]</code>.  <code>myface/recipes/default.rb</code> should now look like
this:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>myface/attributes/default.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Cookbook</span> <span class="ss">Name</span><span class="p">::</span> <span class="n">myface</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Recipe:: default&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="c1">#&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Copyright</span> <span class="p">(</span><span class="n">C</span><span class="p">)</span> <span class="mi">2013</span> <span class="no">YOUR_NAME</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;#&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">All</span> <span class="n">rights</span> <span class="n">reserved</span> <span class="o">-</span> <span class="no">Do</span> <span class="no">Not</span> <span class="no">Redistribute</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;#&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">group</span> <span class="n">node</span><span class="o">[</span><span class="ss">:myface</span><span class="o">][</span><span class="ss">:group</span><span class="o">]&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;user node[:myface][:user] do</span>
</span><span class='line'><span class="sr">  group node[:myface][:group]</span>
</span><span class='line'><span class="sr">  system true</span>
</span><span class='line'><span class="sr">  shell &quot;/</span><span class="n">bin</span><span class="o">/</span><span class="n">bash</span><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Re-provision with <code>vagrant provision</code> to see how the refactor went:</p>

<pre><code>$ vagrant provision
[Berkshelf] Updating Vagrant's berkshelf: '/Users/misheska/.berkshelf/vagrant/berkshelf-20130325-20447-1lz0yjk'
[Berkshelf] Using myface (0.1.0) at path: '/Users/misheska/git/myface'
[default] Running provisioner: VagrantPlugins::Chef::Provisioner::ChefSolo...
Generating chef JSON and uploading...
Running chef-solo...
[2013-03-25T12:56:23+00:00] INFO: *** Chef 11.2.0 ***
[2013-03-25T12:56:23+00:00] INFO: Setting the run_list to ["recipe[myface::default]"] from JSON
[2013-03-25T12:56:23+00:00] INFO: Run List is [recipe[myface::default]]
[2013-03-25T12:56:23+00:00] INFO: Run List expands to [myface::default]
[2013-03-25T12:56:23+00:00] INFO: Starting Chef Run for myface-berkshelf
[2013-03-25T12:56:23+00:00] INFO: Running start handlers
[2013-03-25T12:56:23+00:00] INFO: Start handlers complete.
[2013-03-25T12:56:23+00:00] INFO: Processing group[myface] action create (myface::default line 10)
[2013-03-25T12:56:23+00:00] INFO: Processing user[myface] action create (myface::default line 12)
[2013-03-25T12:56:23+00:00] INFO: Chef Run complete in 0.031634516 seconds
[2013-03-25T12:56:23+00:00] INFO: Running report handlers
[2013-03-25T12:56:23+00:00] INFO: Report handlers complete
</code></pre>

<p>As long as you didn't create any syntax errors in your refactoring file edits,
there should be no net change on the virtual machine test node (as you've only
just moved some strings into a node attribute).  Running  <code>getent</code> on the
test virtual machine should also produce the same result:</p>

<pre><code>$ vagrant ssh -c "getent passwd myface"
myface:x:497:1001::/home/myface:/bin/bash
</code></pre>

<h1>Iteration #3 - Install the Apache2 Web Server</h1>

<p>Our hot new social networking application, myface, is a web app, so we need
to install a web server.  Let's install the Apache2 web server.</p>

<p>Modify <code>myface/recipes/default.rb</code> to include the apache2 cookbook's default
recipe:</p>

<pre><code>include_recipe "apache2"
</code></pre>

<p>The resultant <code>myface/recipes/default.rb</code> file should look like so:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>myface/recipes/default.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Cookbook</span> <span class="ss">Name</span><span class="p">::</span> <span class="n">myface</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Recipe:: default&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="c1">#&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Copyright</span> <span class="p">(</span><span class="n">C</span><span class="p">)</span> <span class="mi">2013</span> <span class="no">YOUR_NAME</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;#&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">All</span> <span class="n">rights</span> <span class="n">reserved</span> <span class="o">-</span> <span class="no">Do</span> <span class="no">Not</span> <span class="no">Redistribute</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;#&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">group</span> <span class="n">node</span><span class="o">[</span><span class="ss">:myface</span><span class="o">][</span><span class="ss">:group</span><span class="o">]&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;user node[:myface][:user] do</span>
</span><span class='line'><span class="sr">  group node[:myface][:group]</span>
</span><span class='line'><span class="sr">  system true</span>
</span><span class='line'><span class="sr">  shell &quot;/</span><span class="n">bin</span><span class="o">/</span><span class="n">bash</span><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">end&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;include_recipe &quot;</span><span class="n">apache2</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Since you are loading Apache2 from another cookbook, you need to configure the
dependency in your metadata.  Edit <code>myface/metadata.rb</code> and add the <code>apache2</code>
dependency at the bottom:</p>

<pre><code>depends "apache2", "~&gt; 1.6.0"
</code></pre>

<p>This tells Chef that the myface cookbook depends on the apache2 cookbook.
We've also specified a version constraint using the optimistic operator
<code>~&gt;</code> to tell our Chef that we want the latest version of the apache2 cookbook
that is greater than 1.6.0 but <em>not</em> 1.7.0 or higher.</p>

<p>It is recommended that Chef cookbooks follow a
<a href="http://semver.org/">Semantic Versioning</a> scheme.  So if you write your
cookbook to use the latest apache2 1.6.x cookbook, if the apache2 cookbook is
ever bumped to a 1.7.x version (or 2.x), it has some public API functionality
that has at least been deprecated.  So you'll want to review the changes and
test before automatically using an apache2 cookbook version 1.7.x or higher.
However, automatic use of any new 1.6.x is perfectly fine, because no
only backwards-compatible bug fixes has been introduced.  Semantic Versioning
guarantees there are no changes in the public APIs.</p>

<p>Your <code>myface/metadata.rb</code> should look like this:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>myface/attributes/default.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">name</span>             <span class="s2">&quot;myface&quot;</span>
</span><span class='line'><span class="n">maintainer</span>       <span class="s2">&quot;YOUR_NAME&quot;</span>
</span><span class='line'><span class="n">maintainer_email</span> <span class="s2">&quot;YOUR_EMAIL&quot;</span>
</span><span class='line'><span class="n">license</span>          <span class="s2">&quot;All rights reserved&quot;</span>
</span><span class='line'><span class="n">description</span>      <span class="s2">&quot;Installs/Configures myface&quot;</span>
</span><span class='line'><span class="n">long_description</span> <span class="no">IO</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="no">FILE</span><span class="o">&lt;</span><span class="sr">/strong&gt;), &#39;README.md&#39;))</span>
</span><span class='line'><span class="sr">version          &quot;0.1.0&quot;&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">depends</span> <span class="s2">&quot;apache2&quot;</span><span class="p">,</span> <span class="s2">&quot;~&gt; 1.6.0&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Now when you re-run <code>vagrant provision</code> it will install apache2 on your
test virtual machine:</p>

<pre><code>$ vagrant provision
[Berkshelf] Updating Vagrant's berkshelf: '/Users/misheska/.berkshelf/vagrant/berkshelf-20130326-30730-144pxxn'
[Berkshelf] Using myface (0.1.0) at path: '/Users/misheska/git/myface'
[Berkshelf] Installing apache2 (1.6.0) from site: 'http://cookbooks.opscode.com/api/v1/cookbooks'
[default] Running provisioner: VagrantPlugins::Chef::Provisioner::ChefSolo...
Generating chef JSON and uploading...
Running chef-solo...
[2013-03-27T06:29:43+00:00] INFO: *** Chef 11.2.0 ***
[2013-03-27T06:29:43+00:00] INFO: Setting the run_list to ["recipe[myface::default]"] from JSON
[2013-03-27T06:29:43+00:00] INFO: Run List is [recipe[myface::default]]
[2013-03-27T06:29:43+00:00] INFO: Run List expands to [myface::default]
[2013-03-27T06:29:43+00:00] INFO: Starting Chef Run for myface-berkshelf
[2013-03-27T06:29:43+00:00] INFO: Running start handlers
[2013-03-27T06:29:43+00:00] INFO: Start handlers complete.
...
[2013-03-27T06:30:40+00:00] INFO: Processing execute[a2dissite default] action run (apache2::default line 34)
[2013-03-27T06:30:40+00:00] INFO: Processing service[apache2] action start (apache2::default line 221)
[2013-03-27T06:30:40+00:00] INFO: service[apache2] started
[2013-03-27T06:30:40+00:00] INFO: template[/etc/httpd/mods-available/deflate.conf] sending restart action to service[apache2] (delayed)
[2013-03-27T06:30:40+00:00] INFO: Processing service[apache2] action restart (apache2::default line 221)
[2013-03-27T06:30:41+00:00] INFO: service[apache2] restarted
[2013-03-27T06:30:41+00:00] INFO: execute[a2enmod deflate] sending restart action to service[apache2] (delayed)
[2013-03-27T06:30:41+00:00] INFO: Processing service[apache2] action restart (apache2::default line 24)
[2013-03-27T06:30:43+00:00] INFO: service[apache2] restarted
[2013-03-27T06:30:43+00:00] INFO: Chef Run complete in 59.309557362 seconds
[2013-03-27T06:30:43+00:00] INFO: Running report handlers
[2013-03-27T06:30:43+00:00] INFO: Report handlers complete
</code></pre>

<p>You can also verify that Apache was installed correctly by visiting the
host-only private network address for the virtual machine that Berkshelf
created in your Vagrantfile:</p>

<p><a href="http://33.33.33.10">http://33.33.33.10</a></p>

<p>While you will get a <code>404 Not Found</code> error because we haven't added any
content to our web site yet, the important part is that <code>Apache Server
at 33.33.33.10 Port 80</code> sent the response:</p>

<p><img src="/images/apachewebserver.png" alt="Apache Server Response" /></p>

<p>Wait a second, though.  You never downloaded the <code>apache2</code> cookbook!
That's the magic of the Berkshelf Vagrant plugin you installed earlier.  The
Berkshelf Vagrant plugin will make sure that any changes you make to your
cookbook and all of your cookbook's dependencies are made available to your
virtual machine.  Berkshelf automatically loads all your cookbook dependencies
much like Bundler automatically loads all your gem dependencies.</p>

<p>Where does the Berkshelf put the cookbooks it downloads?  You can find them
in <code>~/.berkshelf/cookbooks</code></p>

<pre><code>Users/misheska/.berkshelf/cookbooks
└── apache2-1.6.0
    ├── attributes
    ├── definitions
    ├── files
    │   └── default
    │       └── tests
    │           └── minitest
    │               └── support
    ├── recipes
    └── templates
        └── default
            └── mods
</code></pre>

<p><code>~/.berkshelf</code> is just the default location where Berkshelf stores data
on your local disk.  This location can be altered by setting the environment
variable <code>BERKSHELF_PATH</code>.</p>

<h1>Iteration #4 - Add Content</h1>

<p>Let's add some content to make that 404 go away.  Edit
<code>myface/recipes/default.rb</code> as follows:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>myface/recipes/default.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Cookbook</span> <span class="ss">Name</span><span class="p">::</span> <span class="n">myface</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Recipe:: default&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="c1">#&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Copyright</span> <span class="p">(</span><span class="n">C</span><span class="p">)</span> <span class="mi">2013</span> <span class="no">YOUR_NAME</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;#&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">All</span> <span class="n">rights</span> <span class="n">reserved</span> <span class="o">-</span> <span class="no">Do</span> <span class="no">Not</span> <span class="no">Redistribute</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;#&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">group</span> <span class="n">node</span><span class="o">[</span><span class="ss">:myface</span><span class="o">][</span><span class="ss">:group</span><span class="o">]&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;user node[:myface][:user] do</span>
</span><span class='line'><span class="sr">  group node[:myface][:group]</span>
</span><span class='line'><span class="sr">  system true</span>
</span><span class='line'><span class="sr">  shell &quot;/</span><span class="n">bin</span><span class="o">/</span><span class="n">bash</span><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">end&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;include_recipe &quot;</span><span class="n">apache2</span><span class="s2">&quot;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;h1&gt;disable default site&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;apache_site &quot;</span><span class="mo">000</span><span class="o">-</span><span class="n">default</span><span class="s2">&quot; do</span>
</span><span class='line'><span class="s2">  enable false</span>
</span><span class='line'><span class="s2">end&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;h1&gt;create apache config&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;template &quot;</span><span class="c1">#{node[:apache][:dir]}/sites-available/myface.conf&quot; do</span>
</span><span class='line'>  <span class="n">source</span> <span class="s2">&quot;apache2.conf.erb&quot;</span>
</span><span class='line'>  <span class="n">notifies</span> <span class="ss">:restart</span><span class="p">,</span> <span class="s1">&#39;service[apache2]&#39;</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;create document root&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">directory</span> <span class="s2">&quot;/srv/apache/myface&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">action</span> <span class="ss">:create</span>
</span><span class='line'>  <span class="n">recursive</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;write siteX&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">template</span> <span class="s2">&quot;/srv/apache/myface/index.html&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">source</span> <span class="s2">&quot;index.html.erb&quot;</span>
</span><span class='line'>  <span class="n">mode</span> <span class="s2">&quot;0644&quot;</span> <span class="c1"># forget me to create debugging exercise</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;enable myface&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">apache_site</span> <span class="s2">&quot;myface.conf&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">enable</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>If you're familiar with Chef and configuring a web app via apache2, nothing
here should be too surprising.  But if not, spend some time reading up on
the resource references at <a href="http://docs.opscode.com">http://docs.opscode.com</a></p>

<p>With Chef, you can create config files from templates using
<a href="http://ruby-doc.org/stdlib-1.9.3/libdoc/erb/rdoc/ERB.html">ERB</a>, a
Ruby templating system.  Create a new template file called
<code>myface/templates/default/apache2.conf.erb</code> which will become the
file <code>.../sites-available/myface.conf</code> on our test virtual machine
(refer to <code>myface/recipes/default.rb</code> above):</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>myface/templates/default/apache2.conf.erb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Managed by Chef for &amp;lt;%= node[:hostname] %&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="no">Alias</span> <span class="o">/</span> <span class="sr">/srv/</span><span class="n">apache</span><span class="o">/</span><span class="n">myface</span><span class="o">/&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;&lt;Directory /s</span><span class="n">rv</span><span class="o">/</span><span class="n">apache</span><span class="o">/</span><span class="n">myface</span> <span class="o">&gt;&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;Options FollowSymLinks +Indexes</span>
</span><span class='line'><span class="sr">Allow from All</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;&lt;/</span><span class="no">Directory</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Also create our web site content as <code>myface/templates/default/index.html.erb</code>.
While it doesn't take advantage of ERB templating yet, it will in further
iterations.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>myface/templates/default/index.html.erb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Welcome</span> <span class="n">to</span> <span class="no">MyFace</span><span class="o">!</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>After you have created these three files, run <code>vagrant provision</code> to deploy
your changes:</p>

<pre><code>$ vagrant provision
[Berkshelf] Updating Vagrant's berkshelf: '/Users/misheska/.berkshelf/vagrant/berkshelf-20130326-30730-144pxxn'
[Berkshelf] Using myface (0.1.0) at path: '/Users/misheska/git/myface'
[Berkshelf] Using apache2 (1.6.0)
[default] Running provisioner: VagrantPlugins::Chef::Provisioner::ChefSolo...
Generating chef JSON and uploading...
Running chef-solo...
[2013-03-27T07:42:07+00:00] INFO: *** Chef 11.2.0 ***
[2013-03-27T07:42:07+00:00] INFO: Setting the run_list to ["recipe[myface::default]"] from JSON
[2013-03-27T07:42:07+00:00] INFO: Run List is [recipe[myface::default]]
[2013-03-27T07:42:07+00:00] INFO: Run List expands to [myface::default]
[2013-03-27T07:42:07+00:00] INFO: Starting Chef Run for myface-berkshelf
[2013-03-27T07:42:07+00:00] INFO: Running start handlers
[2013-03-27T07:42:07+00:00] INFO: Start handlers complete.
...
[2013-03-27T07:42:10+00:00] INFO: template[/srv/apache/myface/index.html] mode changed to 644
[2013-03-27T07:42:10+00:00] INFO: Processing execute[a2ensite myface.conf] action run (myface::default line 24)
[2013-03-27T07:42:10+00:00] INFO: execute[a2ensite myface.conf] ran successfully
[2013-03-27T07:42:10+00:00] INFO: execute[a2ensite myface.conf] sending restart action to service[apache2] (delayed)
[2013-03-27T07:42:10+00:00] INFO: Processing service[apache2] action restart (apache2::default line 221)
[2013-03-27T07:42:11+00:00] INFO: service[apache2] restarted
[2013-03-27T07:42:11+00:00] INFO: Chef Run complete in 3.830142438 seconds
[2013-03-27T07:42:11+00:00] INFO: Running report handlers
[2013-03-27T07:42:11+00:00] INFO: Report handlers complete
</code></pre>

<p>If the Chef run completed successfully, if you point your web browser at your
myface web site again:</p>

<p><a href="http://33.33.33.10">http://33.33.33.10</a></p>

<p>You'll see some lovely content!</p>

<p><img src="/images/welcometomyface.png" alt="Welcome to MyFace" /></p>

<h1>More to come!</h1>

<p>This is just part one of a multi-part series.  So far you've gone through
several short iteration loops as you evolve the myface cookbook.  In subsequent
installments, we'll go through more iterations, resulting in the final
end product: <a href="https://github.com/reset/myface-cookbook">https://github.com/reset/myface-cookbook</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Try out Sensu Monitoring using Virtual Box, Vagrant and Chef]]></title>
    <link href="http://misheska.com/blog/2013/02/28/try-out-sensu-monitoring-using-virtual-box%2C-vagrant-and-chef/"/>
    <updated>2013-02-28T22:54:00-08:00</updated>
    <id>http://misheska.com/blog/2013/02/28/try-out-sensu-monitoring-using-virtual-box,-vagrant-and-chef</id>
    <content type="html"><![CDATA[<p>I've been using Sensu Monitoring in production for about three to four months
now.  It's a nice, lightweight monitoring framework, designed with the cloud
in mind and for use with modern configuration management frameworks like
Chef and Puppet.  For more information on Sensu, check out the article
<a href="https://github.com/sensu/sensu/wiki">Why Sonian created Sensu (by Sean Porter)</a>
and the associated articles and links on the <a href="https://github.com/sensu/sensu/wiki">Sensu Wiki</a></p>

<p>In this article, I'm going to present a quick overview on how to test and
evaluate Sensu using the <a href="https://github.com/sensu/sensu-chef">Sensu Chef Cookbook</a>
Through the magic of Oracle VirtualBox and Vagrant, combined with Chef, you
can quickly deploy Sensu to a local virtual machine instance, and kick the
tires on Sensu to evaluate whether or not it is a good monitoring solution
for you.  These instructions apply to Mac OS X, Linux, and/or Windows for
the host operating system.</p>

<h1>Install VirtualBox</h1>

<p>VirtualBox is an open source virtualization platform, similar to VMWare
Fusion/Workstation that runs on Mac OS X, Linux and Windows (and a few more
platforms).  While I personally prefer VMWare Fusion to VirtualBox (VirtualBox
can be a bit flakey at times), a lot of automation around VirtualBox has been
developed within the Chef community, which impossible to ignore.  Fortunately
on both Mac OS X and Linux, VirtualBox can peacefully coexist with VMWare
Fusion/Workstation (NOTE: If you use KVM virtualization on Linux, VirtualBox
can also coexist, but you need to be careful not to run VirtualBox and KVM
images simultaneously).</p>

<p>Just download and run the VirtualBox installer from the <a href="https://www.virtualbox.org/wiki/Downloads">VirtualBox download
page</a>.  Just download and install
the latest 4.2.x version of VirtualBox.  Make sure you save the VirtualBox
installer as it comes with an uninstall tool, should you wish to remove
VirtualBox at some point in the future.</p>

<h1>Install Vagrant</h1>

<p>After installing VirtualBox, next install Vagrant.  Vagrant is an automation
framework for VirtualBox.  Grab the latest Vagrant installer for your OS from
the <a href="http://downloads.vagrantup.com/">Vagrant Downloads page</a> and run install.
On Mac OS X and Windows, the Vagrant install will automatically add the Vagrant
binaries to your PATH, on Linux, you will need to manually add
<code>/opt/vagrant/bin</code> per the <a href="http://docs.vagrantup.com/v1/docs/getting-started/index.html">Getting Started with Vagrant docs</a>.</p>

<h1>Download the sensu-chef cookbook</h1>

<p>Grab the latest version of the sensu-chef cookbook from GitHub by running
the following command:</p>

<pre><code>git clone https://github.com/sensu/sensu-chef.git
</code></pre>

<h1>Install Ruby &amp; RubyGems</h1>

<p>The sensu-chef cookbook requires Ruby &amp; RubyGems.</p>

<p>On Mac OS X and Linux, I strongly recommend that you use either RVM or Rbenv
to make sure that you are using the latest version of Ruby instead of whatever
version of Ruby your system installs by default.</p>

<p>See my previous articles on <a href="http://misheska.com/blog/2013/02/24/using-rvm-to-manage-multiple-versions-of-ruby/">RVM</a> or <a href="http://misheska.com/blog/2013/02/24/using-rbenv-to-manage-multiple-versions-of-ruby/">Rbenv</a>.  NOTE: If you don't
know whether or not to decide between RVM or Rbenv, go with RVM.</p>

<h1>Patch chef-sensu Vagrantfile</h1>

<p>As of this writing, the <code>Vagrantfile</code> included in
<code>sensu-chef/examples</code> will not set up the VM properly and the
Chef run will fail with the following error:</p>

<pre><code>[default] Running chef-solo...
stdin: is not a tty
[Fri, 01 Mar 2013 08:28:06 +0000] INFO: *** Chef 0.10.8 ***
[Fri, 01 Mar 2013 08:28:06 +0000] INFO: Setting the run_list to ["recipe[monitor::master]", "recipe[monitor::redis]", "recipe[monitor::rabbitmq]"] from JSON
[Fri, 01 Mar 2013 08:28:06 +0000] INFO: Run List is [recipe[monitor::master], recipe[monitor::redis], recipe[monitor::rabbitmq]]
[Fri, 01 Mar 2013 08:28:06 +0000] INFO: Run List expands to [monitor::master, monitor::redis, monitor::rabbitmq]
[Fri, 01 Mar 2013 08:28:06 +0000] INFO: Starting Chef Run for ubuntu-1204-i386
[Fri, 01 Mar 2013 08:28:06 +0000] INFO: Running start handlers
[Fri, 01 Mar 2013 08:28:06 +0000] INFO: Start handlers complete.
[Fri, 01 Mar 2013 08:28:07 +0000] ERROR: Running exception handlers
[Fri, 01 Mar 2013 08:28:07 +0000] ERROR: Exception handlers complete
[Fri, 01 Mar 2013 08:28:07 +0000] FATAL: Stacktrace dumped to /tmp/vagrant-chef-1/chef-stacktrace.out
[Fri, 01 Mar 2013 08:28:07 +0000] FATAL: NoMethodError: undefined method `default_action' for #&lt;Class:0x8decb20&gt;
Chef never successfully completed! Any errors should be visible in the
</code></pre>

<p>output above. Please fix your recipes so that they properly complete.</p>

<p>I've created a revised <code>Vagrantfile</code> which fixes this issue.
Download this amended version and copy it in place of
<code>sensu-client/examples/Vagrantfile</code></p>

<p><div><script src='https://gist.github.com/5063291.js?file=Vagrantfile'></script>
<noscript><pre><code>#require 'berkshelf/vagrant'

Vagrant::Config.run do |config|
  config.vm.box = &quot;ubuntu-1204-i386&quot;
  config.vm.box_url = &quot;http://vagrant.sensuapp.org/ubuntu-1204-i386.box&quot;

  config.vm.customize [
    &quot;modifyvm&quot;, :id,
    &quot;--name&quot;, &quot;Sensu Stack&quot;,
    &quot;--memory&quot;, &quot;1024&quot;
  ]

  config.vm.provision :shell, :inline =&gt; &quot;apt-get install -y curl&quot;
  config.vm.provision :shell, :inline =&gt; &quot;curl -L https://www.opscode.com/chef/install.sh | bash&quot;

  config.vm.forward_port 8080, 8080
  config.vm.forward_port 9000, 9000

  config.vm.provision :chef_solo do |chef|
    chef.cookbooks_path = &quot;cookbooks&quot;
    chef.data_bags_path = &quot;data_bags&quot;
    chef.add_recipe &quot;monitor::master&quot;
    chef.add_recipe &quot;monitor::redis&quot;
    chef.add_recipe &quot;monitor::rabbitmq&quot;
  end
end
</code></pre></noscript></div>
</p>

<h1>Install Ruby DevKit (Windows)</h1>

<p>The sensu-chef recipe is dependent on the json gem.  On Windows, you will get
the following error if you do not have the proper Ruby DevKit installed:</p>

<pre><code>Installing json (1.7.7)
Gem::InstallError: The 'json' native gem requires installed build tools.
</code></pre>

<p>Go to <a href="http://rubyinstaller.org/downloads">http://rubyinstaller.org/downloads</a>
and refer to the <em>Which Development Kit?</em> section of the web page about which
DevKit you need to install.</p>

<p>Download the appropriate DevKit toolkit, extract it and run the following
in a Command Prompt:</p>

<pre><code>&gt; ruby dk.rb init
[INFO] found RubyInstaller v1.9.3 at C:/Ruby193

Initialization complete! Please review and modify the auto-generated
'config.yml' file to ensure it contains the root directories to all
of the installed Rubies you want enhanced by the DevKit.

&gt; ruby dk.rb install
[INFO] Updating convenience notice gem override for 'C:/Ruby193'
[INFO] Installing 'C:/Ruby193/lib/ruby/site_ruby/devkit.rb'
</code></pre>

<h1>Create the sensu-chef virtual machine</h1>

<p>Run the following commands to create the sensu-chef virtual machine:</p>

<pre><code>cd sensu-chef/examples
gem install bundler
# On Windows, restart the command prompt before running 'bundle install' as
# gem install will reset the PATH
bundle install
librarian-chef install
vagrant up
</code></pre>

<p>If all goes well, the <code>chef-solo</code> run should have succeeded, and
you should be able to view the Sensu dashboard by going to the following URL
with the username <code>admin</code> and the password <code>secret</code>:
<a href="http://localhost:8080">http://localhost:8080</a></p>

<p><img src="/images/sensudashboard.png" alt="Sensu Dashboard" /></p>

<p>If this is successful, on Mac OX and Linux, just run the following command to
log in to your newly-created virtual machine instance:</p>

<pre><code>vagrant ssh
</code></pre>

<p>On Windows, run the following command (or use a visual SSH client like PuTTY):</p>

<pre><code>ssh vagrant@127.0.0.1 -p 2222 -i C:/Users/misheska/.vagrant.d/insecure_private_key
</code></pre>

<p>And refer to the <a href="https://github.com/sensu/sensu/wiki">Sensu wiki</a> on how
to experiment with various configuration options.</p>

<p>When you are done playing with the test VM, run the following command to
destroy the VM:</p>

<pre><code>vagrant destroy
</code></pre>
]]></content>
  </entry>
  
</feed>
